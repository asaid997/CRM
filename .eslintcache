[{"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/index.js":"1","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/App.js":"2","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/reportWebVitals.js":"3","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/clients.js":"4","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/api.js":"5","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/client.js":"6","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/snackBar.js":"7","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/snackbars.jsx":"8","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/countries.js":"9","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/emailType.js":"10","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/owners.js":"11","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Client.jsx":"12","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/ClientBar.jsx":"13","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Clients.jsx":"14","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/dialog.jsx":"15","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/actions.jsx":"16","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/AddClient.jsx":"17","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/Actions.jsx":"18","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Dialog.jsx":"19","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/Update.jsx":"20","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/ClientsAuto.jsx":"21","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/AC.jsx":"22","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Snackbars.jsx":"23","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/Dashboard.jsx":"24","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/Sales.jsx":"25","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/TopEmployees.jsx":"26"},{"size":1118,"mtime":1610707460614,"results":"27","hashOfConfig":"28"},{"size":1262,"mtime":1610711268542,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610524371383,"results":"30","hashOfConfig":"28"},{"size":2077,"mtime":1610729454652,"results":"31","hashOfConfig":"28"},{"size":1838,"mtime":1610744121660,"results":"32","hashOfConfig":"28"},{"size":1856,"mtime":1610741610330,"results":"33","hashOfConfig":"28"},{"size":746,"mtime":1610648553205,"results":"34","hashOfConfig":"28"},{"size":660,"mtime":1610708180130,"results":"35","hashOfConfig":"28"},{"size":683,"mtime":1610716150959,"results":"36","hashOfConfig":"28"},{"size":653,"mtime":1610716479841,"results":"37","hashOfConfig":"28"},{"size":697,"mtime":1610716229519,"results":"38","hashOfConfig":"28"},{"size":903,"mtime":1610743740094,"results":"39","hashOfConfig":"28"},{"size":1424,"mtime":1610743499597,"results":"40","hashOfConfig":"28"},{"size":3322,"mtime":1610743390096,"results":"41","hashOfConfig":"28"},{"size":2562,"mtime":1610662348054,"results":"42","hashOfConfig":"28"},{"size":194,"mtime":1610662339740,"results":"43","hashOfConfig":"28"},{"size":2218,"mtime":1610743847456,"results":"44","hashOfConfig":"28"},{"size":950,"mtime":1610744200086,"results":"45","hashOfConfig":"28"},{"size":2887,"mtime":1610707954088,"results":"46","hashOfConfig":"28"},{"size":2704,"mtime":1610743226105,"results":"47","hashOfConfig":"28"},{"size":1038,"mtime":1610670929069,"results":"48","hashOfConfig":"28"},{"size":915,"mtime":1610707902750,"results":"49","hashOfConfig":"28"},{"size":660,"mtime":1610708180130,"results":"50","hashOfConfig":"28"},{"size":3973,"mtime":1610743978825,"results":"51","hashOfConfig":"28"},{"size":792,"mtime":1610729505022,"results":"52","hashOfConfig":"28"},{"size":729,"mtime":1610723129122,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"frm9u1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/index.js",[],["109","110"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/App.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/reportWebVitals.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/clients.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/api.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/client.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/snackBar.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/snackbars.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/countries.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/emailType.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/stores/helpers/owners.js",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Client.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/ClientBar.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Clients.jsx",["111"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/dialog.jsx",["112"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/actions.jsx",["113"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/AddClient.jsx",["114"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/Actions.jsx",["115"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/clients/Dialog.jsx",["116"],"import React, { useEffect, useState } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Input, TextField, makeStyles } from \"@material-ui/core\";\nimport AC from \"../AC\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"35ch\",\n    },\n  },\n}));\n\nfunction AlertDialog(props) {\n  const classes = useStyles();\n\n  const {\n    open,\n    handleClose,\n    userToUpdate,\n    clientsStore,\n    snackBarStore,\n    countrieStore,\n  } = props;\n\n  const [vals, setVals] = useState({});\n  const [country, setCountry] = useState(\"\");\n\n  useEffect(() => {\n    setVals({ first: userToUpdate.first, last: userToUpdate.last });\n    setCountry(userToUpdate.country);\n  }, [userToUpdate]);\n\n  const save = async () => {\n    const result = await clientsStore.cl_updateClient(\n      userToUpdate.id,\n      vals.first,\n      vals.last,\n      country\n    );\n    result\n      ? snackBarStore.alertSuccess(\"Changed\")\n      : snackBarStore.alertFailure(\"Value wasnt changed due to an issue\");\n    handleClose();\n  };\n\n  const inputHandler = (event) => {\n    const { value, name } = event.target;\n    setVals({ ...vals, [name]: value });\n  };\n  const countryHandler = (_, val) => setCountry(val);\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id=\"alert-dialog-title\">Update</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {Object.keys(vals).map((k) => (\n              <div key={k}>\n                <TextField\n                  className={classes.root}\n                  label={k}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={vals[k]}\n                  name={k}\n                  onChange={inputHandler}\n                />\n              </div>\n            ))}\n            <AC\n              options={countrieStore.countries.map((c) => c.country)}\n              label=\"country\"\n              holder={country}\n              handler={countryHandler}\n              clss={classes.root}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={save} color=\"primary\" autoFocus>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default inject(\n  \"clientsStore\",\n  \"snackBarStore\",\n  \"countrieStore\"\n)(observer(AlertDialog));\n","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/Update.jsx",["117","118"],"import { Button, Grid, TextField } from \"@material-ui/core\"\nimport { inject, observer } from \"mobx-react\"\nimport React, { useState } from \"react\"\nimport apiManager from \"../../api\"\nimport AC from \"../AC\"\n\nfunction Update(props) {\n  const { clss, clientsStore, ownerStore, emailTypeStore,snackBarStore,validateInput } = props\n  const [owner, setOwner] = useState(\"\")\n  const [client, setClient] = useState(\"\")\n  const [emailType, setEmailType] = useState(\"\")\n  const clientHandler = (_, val) => setClient(val)\n  const ownerHandler = (_, val) => setOwner(val)\n  const emailHandler = (_, val) => setEmailType(val)\n\n    const handleResults = (flag,success,failure) => flag ? snackBarStore.alertSuccess(success) : snackBarStore.alertFailure(failure)\n\n  const failureOutput = field => `Choose a ${field} from the list`\n\n  const transferHandler = async () => {\n    if(validateInput(client,failureOutput(\"client\")) && validateInput(emailType,failureOutput(\"email type\")))\n        handleResults(await clientsStore.ac_transfer(client,emailType),\"Sent\",\"Failed\")\n  }\n  const changeOwnerHandler = async () => {\n    if(validateInput(client,failureOutput(\"client\")) && validateInput(owner,failureOutput(\"owner\")))\n        handleResults(await clientsStore.ac_changeOwner(client,owner),\"Changed owner\",\"Owner was not changed\")\n  }\n  const declareHandler = async () => {\n    if(validateInput(client,failureOutput(\"client\")))\n        handleResults(await clientsStore.ac_declareSale(client),\"Sold\",\"Failed\")\n  }\n\n  return (\n    <div>\n      <h2>UPDATE</h2>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <AC\n            options={clientsStore.clients.map((c) => `${c.first} ${c.last}`)}\n            label=\"Choose client to update\"\n            handler={clientHandler}\n            clss={clss.root}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AC\n            options={ownerStore.owners.map(c => c.owner)}\n            label=\"owner\"\n            handler={ownerHandler}\n            clss={clss.root}\n          />\n          <Button color=\"primary\" onClick={changeOwnerHandler}>Transfer</Button>\n        </Grid>\n        <Grid item xs={12}>\n          <AC \n            options={emailTypeStore.types.map(e => e.email_type)}\n            label=\"email type\"\n            handler={emailHandler}\n            clss={clss.root}\n          />\n            <Button color=\"primary\" onClick={transferHandler}>Send email</Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button color=\"primary\" onClick={declareHandler}>Declare sale</Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default inject(\"clientsStore\",\"ownerStore\",\"emailTypeStore\",\"snackBarStore\")(observer(Update))\n","/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Actions/ClientsAuto.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/AC.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Snackbars.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/Dashboard.jsx",["119","120","121","122"],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/Sales.jsx",[],"/Users/Androwsa/Desktop/Elavation/Ele/projects/crm/src/components/Analytics/TopEmployees.jsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":62,"column":6,"nodeType":"130","endLine":62,"endColumn":24,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":15},{"ruleId":"132","severity":1,"message":"136","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"137","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"136","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":15},{"ruleId":"132","severity":1,"message":"138","line":1,"column":24,"nodeType":"134","messageId":"135","endLine":1,"endColumn":33},{"ruleId":"132","severity":1,"message":"139","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":18},{"ruleId":"132","severity":1,"message":"140","line":1,"column":21,"nodeType":"134","messageId":"135","endLine":1,"endColumn":31},{"ruleId":"128","severity":1,"message":"141","line":63,"column":6,"nodeType":"130","endLine":63,"endColumn":25,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"143","line":66,"column":6,"nodeType":"130","endLine":66,"endColumn":28,"suggestions":"144"},{"ruleId":"128","severity":1,"message":"145","line":69,"column":6,"nodeType":"130","endLine":69,"endColumn":31,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"147","line":2,"column":22,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientsStore.clients'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'apiManager' is defined but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'ownerStore'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'emailTypeStore'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'countrieStore'. Either include it or remove the dependency array.",["153"],"'Cell' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [clientsStore.clients, filter, filterBy]",{"range":"162","text":"163"},"Update the dependencies array to be: [ownerStore, ownerStore.owners]",{"range":"164","text":"165"},"Update the dependencies array to be: [emailTypeStore, emailTypeStore.types]",{"range":"166","text":"167"},"Update the dependencies array to be: [countrieStore, countrieStore.countries]",{"range":"168","text":"169"},[1949,1967],"[clientsStore.clients, filter, filterBy]",[2082,2101],"[ownerStore, ownerStore.owners]",[2305,2327],"[emailTypeStore, emailTypeStore.types]",[2531,2556],"[countrieStore, countrieStore.countries]"]